// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  userId            String
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  post          Post[]
  comments      Comment[]
}

model Post {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  content   String?   @db.Text
  image     String?
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments  Comment[]

  @@index([userId])
}

model Comment {
  id              String    @id @default(cuid())
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  content         String
  userId          String
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  postId          String?
  post            Post?     @relation(fields: [postId], references: [id], onDelete: Cascade)
  parentCommentId String?
  parentComment   Comment?  @relation("nestedComment", fields: [parentCommentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  nestedComment   Comment[] @relation("nestedComment")

  @@index([userId])
  @@index([postId])
}
